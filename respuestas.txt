18. Escriba el programa que muestra por la consola la frase "Hola Mundo". ¿Que significado tienela salida? 
Hola mundo                                                                                                                                   
=> nil        (se imprime en la salida el string "hola mundo"


 ¿Que diferencia hay entre "\t\n" y ’\t\n’?

Entre comillas se interpreta un tabulador y retorno de carro. Comillas simples se ven los caracteres tal cual.

22. ¿Como funciona %q? ¿Que es %q{hello world\n}? ¿Que es %q{’a’ ’b’ ’c’}?
23. ¿Como funciona %Q? ¿Qu ́e es %Q{hello world\n}? ¿Que es %Q{"a" "b" "c"}?
%q imprime un escape \ por cada caracter especial %Q no los muestra

24. ¿Que queda en c?
=> "--4--\n--2--\n"

25. ¿Que queda en c?
=> "--\#{a}--\n--\#{b}--\n"

26. s = "hello". ¿Cual es el valor de las siguientes expresiones?

irb(main):042:0> s[0,2]
=> "he"
irb(main):043:0> s[-1,1]
=> "o"
irb(main):044:0> s[0,10]
=> "hello"

27. ¿Que queda en g?
=> "hello world"

28. ¿Que queda en e?
=> "..."

29. ¿Cual es el resultado?
=> "2 2 2 "

30. ¿Que es esto? %w[this is a test]
=> ["this", "is", "a", "test"]

31. ¿Que es esto? %w[\t \n]
=> ["\\t", "\\n"]

32. ¿Que es esto? %W[\t \n]
=> ["\t", "\n"]

33. ¿Que contiene nils? nils = Array.new(3)
=> [nil, nil, nil]

34. ¿Que contiene zeros? zeros = Array.new(3, 0)
=> [0, 0, 0]

35. ¿Que queda en b?
=> [[1, 2], [3, 4]]

36. ¿Que queda en c?
=> [0, 2, 4]


37. ¿Cual es el resultado de cada una de estas operaciones?
irb(main):017:0> a[1,1]
=> ["b"]
irb(main):018:0> a[-2,2]
=> ["d", "e"]
irb(main):019:0> a[0..2]
=> ["a", "b", "c"]
irb(main):020:0> a[0...1]
=> ["a"]
irb(main):021:0> a[-2..-1]
=> ["d", "e"]

38. ¿Cual es el resultado de cada una de estas operaciones?
irb(main):028:0> a
=> ["A", "B", "c", "d", "e"]
irb(main):029:0> a[2..5]=%w{C D E}
=> ["C", "D", "E"]
irb(main):030:0> a
=> ["A", "B", "C", "D", "E"]
irb(main):031:0> a[0,0]=[1,2,3]
=> [1, 2, 3]
irb(main):032:0> a
=> [1, 2, 3, "A", "B", "C", "D", "E"]
irb(main):033:0> a[0,2] = []
=> []
irb(main):034:0> a
=> [3, "A", "B", "C", "D", "E"]
irb(main):035:0> a[-1,1]=['Z']
=> ["Z"]
irb(main):036:0> a
=> [3, "A", "B", "C", "D", "Z"]
irb(main):037:0> a[-2,2]=nil
=> nil
irb(main):038:0> a
=> [3, "A", "B", "C", nil]

39. ¿Cual es el resultado de cada una de estas operaciones?
irb(main):042:0> a=(1...4).to_a
=> [1, 2, 3]
irb(main):043:0> a=a+[4,5]
=> [1, 2, 3, 4, 5]
irb(main):044:0> a += [[6,7,8]]
=> [1, 2, 3, 4, 5, [6, 7, 8]]
irb(main):045:0> a = a + 9
TypeError: can't convert Fixnum into Array

40. ¿Cual es el resultado de cada una de estas operaciones?
irb(main):049:0> x=%w{a b c b a}
=> ["a", "b", "c", "b", "a"]
irb(main):050:0> x=x-%w{b c d}
=> ["a", "a"]

41. ¿Cual es el resultado de cada una de estas operaciones?
=> [0, 0, 0, 0, 0, 0, 0, 0]


42. ¿Cual es el resultado de cada una de estas operaciones?

irb(main):062:0> a << 1
=> [1]
irb(main):063:0> a << 2 << 3
=> [1, 2, 3]
irb(main):064:0> a << [4,5,6]
=> [1, 2, 3, [4, 5, 6]]
irb(main):066:0> a.concat [7,8]
=> [1, 2, 3, [4, 5, 6], 7, 8]


43. ¿Cual es el resultado de cada una de estas operaciones?
irb(main):072:0> c=a|b
=> [1, 2, 3, 4, 5]
irb(main):073:0> d=b|a
=> [5, 4, 3, 2, 1]
irb(main):074:0> e=a & b
=> [2, 3, 4]
irb(main):075:0> f=b & a
=> [4, 3, 2]


44. ¿Que resultados dan las siguientes operaciones?



irb(main):079:0> b=1...10
=> 1...10
irb(main):080:0> b.to_a
=> [1, 2, 3, 4, 5, 6, 7, 8, 9]
irb(main):081:0> b.include?10
=> false
irb(main):082:0> b.include?8
=> true
irb(main):083:0> b.step(2) {|x| print "#{x} "}
1 3 5 7 9 => 1...10
irb(main):084:0> 1..3.to_a
NoMethodError: undefined method `to_a' for 3:Fixnum

45. ¿Que resultados dan las siguientes operaciones?
irb(main):087:0> r.member?50
=> true
irb(main):088:0> r.include?99.9
=> true
irb(main):089:0> r.member?99.9
=> true


46. ¿Que resultados dan las siguientes operaciones?

irb(main):092:0> true.class
=> TrueClass
irb(main):093:0> false.class
=> FalseClass
irb(main):094:0> puts "Hola" if 0
Hola
=> nil
irb(main):095:0> puts "Hola" if nil
=> nil
irb(main):096:0> puts "Hola" if ""
(irb):96: warning: string literal in condition
Hola
=> nil

47. ¿Que resultados dan las siguientes operaciones?

irb(main):097:0> x=:sym
=> :sym
irb(main):098:0> x.class
=> Symbol
irb(main):099:0> x=='sym'
=> false
irb(main):100:0> x==:sym
=> true
irb(main):101:0> z=:'a long symbol'
=> :"a long symbol"
irb(main):102:0> z.class
=> Symbol
irb(main):103:0> x== 'sym'.to_sym
=> true
irb(main):104:0> x.to_s == 'sym'
=> true

48. ¿Que resultados se dan?

irb(main):109:0> print s
Rub=> nil
irb(main):110:0> s
=> "Rub"
irb(main):111:0> t
=> "Rub"
irb(main):112:0> t="Java"
=> "Java"
irb(main):113:0> print s,t
RubJava=> nil

49. ¿Cual es el resultado?
irb(main):001:0> "%d %s" % [3,"rubies"]
=> "3 rubies"

50. ¿Cuales son los resultados?

irb(main):004:0> x,y=4,5
=> [4, 5]
irb(main):006:0> z =x > y ? x : y
=> 5
irb(main):007:0> x,y,z=[1,2,3]
=> [1, 2, 3]
irb(main):008:0> x
=> 1
irb(main):009:0> y
=> 2
irb(main):010:0> z
=> 3

51. ¿Que resultados dan las siguientes operaciones?
irb(main):012:0> x.keys
=> [:a, :b]
irb(main):013:0> x.values
=> [1, 2]
irb(main):014:0> x[:c]=3
=> 3
irb(main):015:0> x
=> {:a=>1, :b=>2, :c=>3}
irb(main):016:0> x.delete('a')
=> nil
irb(main):017:0> x
=> {:a=>1, :b=>2, :c=>3}
irb(main):018:0> x={:a=>1, :b=>2, :c=>4}
=> {:a=>1, :b=>2, :c=>4}
irb(main):019:0> x.delete_if {|k,v| v % 2 == 0}
=> {:a=>1}
irb(main):020:0> x
=> {:a=>1}

52. ¿Que hace yield 4, 5?
Llama a la propia funcion con el parametro dentro del bloque

53. ¿Que hace la siguiente sentencia? counts = Hash.new(0) ¿Que diferencia hay con la asignacion counts = {}?
Crea un Hash vacio en los dos casos.

54. ¿Que retorna esta expresion? ’hello world, hello LPP’.scan /\w+/

irb(main):017:0> 'hello world, hello LPP'.scan /\w+/
=> ["hello", "world", "hello", "LPP"]

55. Explique que hacen estas sentencias:
irb(main):019:0> c.keys.sort.each { |k| puts c[k] }

Ordena el Hash por claves y las imprime.
3
2
1
=> [:a, :b, :c]


